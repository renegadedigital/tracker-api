type Match {
  id: ID!
  away: String!
  awayFouls: Int!
  awayScore: Int!
  home: Team!
  homeFouls: Int!
  homeScore: Int!
  numStatisticians: Int!
  period: Int
  periodDuration: Seconds
  periodStartedAt: Instant
  periodPausedAt: Instant
  periods: Int
  scheduledAt: Instant!
}


input MatchInput {
  away: String!
  homeId: ID!
  numStatisticians: Int!
  period: Int
  periodDuration: Seconds
  periods: Int
  scheduledAt: Instant!
}


input MatchPatch {
  id: ID!
  away: String
  homeId: ID!
  numStatisticians: Int
  period: Int
  periodDuration: Seconds
  periodStartedAt: Instant
  periodPausedAt: Instant
  periods: Int
  scheduledAt: Instant
}


type MatchAction {
  id: ID!
  action: String!
  athlete: Athlete
  match: Match!
  completedTime: Seconds!
  completedPeriod: Int!
  positionX: Centimeters
  positionY: Centimeters
}


input MatchActionInput {
  action: String!
  athleteId: ID
  substituteId: ID
  positionX: Centimeters,
  positionY: Centimeters,
  completedAt: Seconds!
  matchId: ID!
}


input MatchActionPatch {
  id: ID!
  action: String
  athleteId: ID
  substituteId: ID
  positionX: Centimeters
  positionY: Centimeters
  completedAt: Seconds! 
  matchId: ID
}


type MatchStat {
  athlete: Athlete!
  count: Int!
  match: Match!
  name: String!
}


type Mutation {
  createMatch(match: MatchInput!) : Match!
  createMatchAction(matchAction: MatchActionInput!) : MatchAction!
  deleteMatch(matchId: ID!) : Match!
  deleteMatchAction(matchActionId: ID!) : MatchAction!
  pauseMatchPeriod(matchId: ID!, time: Instant!) : Match!
  setMatchAwayFouls(matchId: ID!, fouls: Int!) : Match!
  setMatchAwayScore(matchId: ID!, score: Int!) : Match!
  startMatchPeriod(matchId: ID!, period: Int!, elapsed: Seconds!, time: Instant!) : Match!
  updateMatch(match: MatchPatch!) : Match!
  updateMatchAction(matchAction: MatchActionPatch!) : MatchAction!
}


type Query {
  match(id: ID!) : Match
  matches(after: Instant, before: Instant, teamId: ID) : [Match!]
  matchStat(athleteId: ID!, name: String!) : MatchStat
  matchStats(athleteId: ID, name: String, matchId: ID, before: Instant, after: Instant) : [MatchStat!]
}


type Subscription {
  matchUpdated(id: ID!) : Match
}
