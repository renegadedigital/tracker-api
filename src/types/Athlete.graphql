type Athlete {
  id: ID!
  billed: Boolean!
  email: Email!
  firstName: String!
  groups: [Group]
  institution: Institution!
  invoices: [Invoice]
  lastName: String!
  photo: String
  position: String
  teams: [Team]
  createdAt: Instant!
  updatedAt: Instant!
}


input AthleteInput {
  email: Email!
  firstName: String!
  institutionId: ID! 
  lastName: String!
  photo: String
  position: String
}


input AthletePatch {
  id: ID!
  email: Email
  firstName: String
  institutionId: ID 
  lastName: String
  photo: String
  position: String
}


type Mutation {
  createAthlete(athlete: AthleteInput!, password: Password) : Athlete!
  deleteAthlete(athleteId: ID!) : Athlete!
  favoriteAthlete(athleteId: ID!) : [Athlete!]
  unfavoriteAthlete(athleteId: ID!) : [Athlete!] 
  updateAthlete(athlete: AthletePatch!) : Athlete!
}


type Query {
  athlete(id: ID!) : Athlete
  athletes(name: String, email: String, institutionId: ID) : [Athlete!]
}
